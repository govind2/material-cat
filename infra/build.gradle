apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply from: "${rootDir.absolutePath}/keys.gradle"

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    publishNonDefault true

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "FLICKR_API_KEY", "\"" + (System.getenv('FLICKR_API_DEBUG_KEY') != null ? System.getenv('FLICKR_API_DEBUG_KEY') : keys.flickrApiDebugKey) + "\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "FLICKR_API_KEY", "\"" + (System.getenv('FLICKR_API_RELEASE_KEY') != null ? System.getenv('FLICKR_API_RELEASE_KEY') : keys.flickrApiReleaseKey) + "\""
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile project(':domain')

    // Support Library
    compile depends.support.annotations

    // Database
    compile depends.orma.core
    kapt depends.orma.processor
    kapt depends.javapoet

    // Structure
    compile depends.dagger.core
    kapt depends.dagger.compiler
    compile depends.rxjava2.core
    compile depends.rxjava2.android
    compile depends.rxjava2.kotlin

    compile depends.moshi.core
    compile depends.moshi.kotlin
    compile depends.moshi.adapters

    // Network
    compile depends.okhttp3.loggingIntercepter
    compile depends.retrofit.core
    compile depends.retrofit.converterMoshi
    compile depends.retrofit.adapterRxJava2

    // Debug
    compile depends.stetho.okhttp3
}
